{
  "$id": "urn:aerleon:schemas:aerleon-config:1.0.0",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Aerleon CLI",
  "description": "YAML Schema for Aerleon CLI tools",
  "type": "object",
  "properties": {
    "base_directory": {
      "type": "string",
      "description": "When using the aclgen or aclcheck programs, base_directory specifies a root directory expected to contain policy files.\n\nRelative paths used in file includes will be resolved against base_directory.\n\nBy default, aclgen will process all policy files found within base_directory and any subdirectories of base_directory. If configured with --policy_file, aclgen will only process the file or files given by that flag.",
      "minLength": 1
    },
    "definitions_directory": {
      "type": "string",
      "description": "When using the aclgen or aclcheck programs, definitions_directory specifies a root directory expected to contain network/service definition files.\n\nBoth aclgen and aclcheck will search this directory and its subdirectories for definition files and load them into memory. These definitions will be used to resolve network and service names referenced by policy files.",
      "minLength": 1
    },
    "output_directory": {
      "type": "string",
      "description": "When using the aclgen program, output_directory controls where generated ACL files will be placed.\n\nGenerated ACL files will be placed in the current directory if ouput_directory is not set.",
      "minLength": 1
    },
    "optimize": {
      "type": "boolean",
      "description": "When using the aclgen program, setting optimize to true causes the program to produce a more compact address book by collapsing adjacent or overlapping CIDR expressions within the same network.\n\nOn some platforms (Juniper SRX and platforms configured with the 'object-group' option) address book compression is restricted to only collapse addresses that share the same network token (name).\n\nThis flag is not enabled by default, although an secondary address book compression pass is always performed for Juniper SRX and Palo Alto Networks firewalls regardless of this setting."
    },
    "recursive": {
      "type": "boolean",
      "description": "UNUSED. This field is not used."
    },
    "debug": {
      "type": "boolean",
      "description": "When using the aclgen program, setting debug to true displays very detailed log messages."
    },
    "verbose": {
      "type": "boolean",
      "description": "UNUSED. This field is not used. To get detailed log messages, use 'debug'."
    },
    "max_renderers": {
      "type": "integer",
      "description": "When using the aclgen program, max_renderers controls the number of parallel processes used to render ACLs. The aclgen program uses Python's OS process-based multiprocessing, so setting max_renderers to '2' would cause aclgen to spawn two OS processes that will generate ACLs.\n\nSetting max_renderers to '1' will disable multiprocessing.\n\nBy default, max_renderers is set to '10'. Users may wish to set this to the number of available CPUs on the current system."
    },
    "shade_check": {
      "type": "boolean",
      "description": "When using the aclgen program, setting shade_check to true causes the program to produce a warning if any unreachable term is encountered."
    },
    "exp_info": {
      "type": "integer",
      "description": "When using the aclgen program, aclgen will produce a warning if it encounters a term set to expire in the near future. Expired terms are ignored. Setting exp_info controls the number of weeks ahead that aclgen will check for soon-to-expire terms.\n\nBy default, exp_info is set to '2' (two weeks)."
    }
  },
  "additionalProperties": false
}
