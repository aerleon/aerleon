name: test
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: paths-filter
        with:
          filters: |
            run_tests:
              - .github/actions/**/*.yml
              - .github/workflows/**/*.yml
              - aerleon/**/*.py
              - benchmarks/**/*.py
              - policies/**/*.yaml
              - policies/**/*.yml
              - policies/**/*.pol
              - policies/**/*.inc
              - def/**/*.yaml
              - def/**/*.yml
              - def/**/*.net
              - def/**/*.svc
              - tests/**/*.py
              - tests/**/*.ref
              - tools/**/*.py
              - codecov.yml
              - poetry.toml
              - pyproject.toml
      #----------------------------------------------
      #    Install Python, Poetry, and CI deps
      #----------------------------------------------
      - name: Set up CI dependencies
        if: steps.paths-filter.outputs.run_tests == 'true'
        uses: ./.github/actions/setup
        id: project-setup
        with:
          python-version: ${{ matrix.python-version }}
      #----------------------------------------------
      #    run test suite and output coverage file
      #----------------------------------------------
      - name: Test with pytest
        if: steps.paths-filter.outputs.run_tests == 'true'
        run: |
          poetry run coverage erase
          poetry run coverage run
          poetry run coverage xml
      #----------------------------------------------
      # upload coverage to codecov
      #----------------------------------------------
      - name: Upload coverage to Codecov
        if: steps.paths-filter.outputs.run_tests == 'true'
        uses: codecov/codecov-action@v3
        with:
          directory: ./
          env_vars: OS,PYTHON
          files: ./coverage.xml
          flags: tests
          name: codecov-umbrella
          verbose: true
